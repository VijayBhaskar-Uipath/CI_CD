<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="IsDemographicNeeded" Type="InArgument(x:String)" />
    <x:Property Name="in_PhyId" Type="InArgument(x:String)" />
    <x:Property Name="in_isHashingNeeded" Type="InArgument(x:String)" />
    <x:Property Name="in_setNumber" Type="InOutArgument(x:Int32)" />
    <x:Property Name="in_PhycisianName" Type="InArgument(x:String)" />
    <x:Property Name="in_SystemName" Type="InArgument(x:String)" />
    <x:Property Name="in_JobID" Type="InArgument(x:String)" />
    <x:Property Name="in_NPIID" Type="InArgument(x:String)" />
    <x:Property Name="out_PatientFolder" Type="InArgument(x:String)" />
    <x:Property Name="out_ReportIDFolder" Type="OutArgument(x:String)" />
    <x:Property Name="out_NPIFolder" Type="OutArgument(x:String)" />
    <x:Property Name="in_PatientID" Type="InArgument(x:String)" />
    <x:Property Name="in_LogDir" Type="InArgument(x:String)" />
    <x:Property Name="in_OutpuFolder" Type="InArgument(x:String)" />
  </x:Members>
  <this:Process.in_PhyId>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.in_PhyId>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1148.8,5253.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>Microsoft.Rest</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>Microsoft.Rest.ClientRuntime</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="968.8,5188.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="PrintwindowExist" />
      <Variable x:TypeArguments="x:String" Name="PatientFolder" />
      <Variable x:TypeArguments="x:String" Name="AccountName" />
      <Variable x:TypeArguments="x:String" Name="SystemName" />
      <Variable x:TypeArguments="x:String" Name="str_PatientHashedName" />
      <Variable x:TypeArguments="x:String" Name="str_PatientFirstName" />
      <Variable x:TypeArguments="x:String" Name="str_PatientLastName" />
      <Variable x:TypeArguments="x:String" Name="str_PatientFullName" />
      <Variable x:TypeArguments="x:Boolean" Name="boolSecondCloseExist" />
      <Variable x:TypeArguments="x:String" Name="str_PatientName" />
      <Variable x:TypeArguments="x:String" Name="str_DOB" />
      <Variable x:TypeArguments="x:String" Name="str_PatientID" />
      <Variable x:TypeArguments="x:String" Name="int_SetNumber" />
      <Variable x:TypeArguments="x:String" Name="PatientName" />
      <Variable x:TypeArguments="x:String" Name="in_outputfolder" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Process" sap:VirtualizedContainerService.HintSize="906.4,4989.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[convert.ToString(in_TransactionItem.SpecificContent(&quot;firstName&quot;))=&quot;&quot;]" DisplayName="If- Patient first name is empty" sap:VirtualizedContainerService.HintSize="844,659.2" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="400,460.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke logs generation Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Msg">Business Exception: First name is empty</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:LogMessage DisplayName="Log Message- BE first name empty" sap:VirtualizedContainerService.HintSize="337.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Business Exception: First name is empty&quot;]" />
            <Throw DisplayName="Throw - BE - First name empty" Exception="[new BusinessRuleException(&quot;Patient First Name is empty&quot;)]" sap:VirtualizedContainerService.HintSize="337.6,32" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[convert.ToString(in_TransactionItem.SpecificContent(&quot;dateOfBirth&quot;))=&quot;&quot;]" DisplayName="If- Patient DOB is empty" sap:VirtualizedContainerService.HintSize="844,659.2" sap2010:WorkflowViewState.IdRef="If_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="400,460.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs Generation Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Msg">Business Exception: DOB is empty</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:LogMessage DisplayName="Log Message- BE - DOB empty" sap:VirtualizedContainerService.HintSize="337.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Business Exception: DOB is empty&quot;]" />
            <Throw DisplayName="Throw- BE - DOB empty" Exception="[new BusinessRuleException(&quot;Patient Date of Birth is empty&quot;)]" sap:VirtualizedContainerService.HintSize="337.6,32" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="400,83.2" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[convert.ToString(in_TransactionItem.SpecificContent(&quot;lastName&quot;))=&quot;&quot;]" DisplayName="If- Patient last name is empty" sap:VirtualizedContainerService.HintSize="844,659.2" sap2010:WorkflowViewState.IdRef="If_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="400,460.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs Generation Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Msg">Business Exception: Last name is empty</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:LogMessage DisplayName="Log Message - BE - Last name empty" sap:VirtualizedContainerService.HintSize="337.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Business Exception: Last name is empty&quot;]" />
            <Throw DisplayName="Throw - BE - Last name empty" Exception="[new BusinessRuleException(&quot;Patient lastName is empty&quot;)]" sap:VirtualizedContainerService.HintSize="337.6,32" sap2010:WorkflowViewState.IdRef="Throw_3" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <ui:MultipleAssign DisplayName="Multiple Assign - Patient first name, last name , dob" sap:VirtualizedContainerService.HintSize="844,173.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[str_PatientFirstName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("firstName").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[str_DOB]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("dateOfBirth").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[str_PatientLastName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("lastName").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <Assign DisplayName="Assign- Patient full name" sap:VirtualizedContainerService.HintSize="844,69.6" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_PatientFullName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[str_PatientLastName+str_PatientFirstName]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message - Hashing" sap:VirtualizedContainerService.HintSize="844,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Hashing worklfow started : &quot;+in_PatientID]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs generation Workflow File" sap:VirtualizedContainerService.HintSize="844,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Msg">["Hashing started for : "+in_PatientID]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <If Condition="[in_isHashingNeeded.ToLower=&quot;yes&quot;]" DisplayName="If- Demographics Needed - Hashing" sap:VirtualizedContainerService.HintSize="844,830.4" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="400,661.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Hashing Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Hashing\Hashing.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="In_PatientName">[str_PatientFullName]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="Out_HashedName">[str_PatientHashedName]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign DisplayName="Assign- patient name" sap:VirtualizedContainerService.HintSize="337.6,69.6" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PatientName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[str_PatientHashedName]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message - Hashing" sap:VirtualizedContainerService.HintSize="337.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Hashing completed&quot;]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs generation Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Msg">["Hashing completed for : "+in_PatientID]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="400,192.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign- patient name" sap:VirtualizedContainerService.HintSize="337.6,69.6" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PatientName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[str_PatientFullName]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message - Folder creation" sap:VirtualizedContainerService.HintSize="844,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Folder creation workflow started for : &quot;+in_PatientID]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs generation Workflow File" sap:VirtualizedContainerService.HintSize="844,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Msg">["Folder creation started for : "+in_PatientID]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <If Condition="[IsDemographicNeeded.ToString.Trim.ToLower=&quot;yes&quot;]" DisplayName="If- DemographicsNeeded- Folder creation" sap:VirtualizedContainerService.HintSize="844,292" sap2010:WorkflowViewState.IdRef="If_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CreateFolder_PatientID workflow" sap:VirtualizedContainerService.HintSize="340,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Folder Creation\CreateFolder_PatientID.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_OutputFolderPath">[in_OutpuFolder]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SystemName">[in_SystemName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_PhycisianName">[in_PhycisianName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_JobID">[in_JobID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="argument2" />
              <InArgument x:TypeArguments="x:Int32" x:Key="in_setNumber">[in_setNumber]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_PatientFullName">[str_PatientHashedName]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_PatientFolder">[out_PatientFolder]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_NPIID">[in_NPIID]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_ReportIDFolder" />
              <OutArgument x:TypeArguments="x:String" x:Key="out_NPIFolder" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </If.Then>
        <If.Else>
          <Assign DisplayName="Assign- Out patient folder" sap:VirtualizedContainerService.HintSize="262.4,69.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_PatientFolder]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_OutpuFolder]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message- Folder creation" sap:VirtualizedContainerService.HintSize="844,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Folder created successfully&quot;]" />
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logs generation Workflow File" sap:VirtualizedContainerService.HintSize="844,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Msg">["Folder creation successful for : "+in_PatientID]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <TryCatch DisplayName="Try Catch- Patient searching" sap:VirtualizedContainerService.HintSize="732.8,1402.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="400,388.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message- Patient searching" sap:VirtualizedContainerService.HintSize="337.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Patient searching workflow started&quot;]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Patient searching Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Process\Search Patient Record.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_PatientFirstName">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_PatientFirstName" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_PatientLastName">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_PatientLastName" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_PatientDob">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="str_DOB" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_PatientFullName">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="PatientName" />
                </InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                  <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_PatientRootFolder">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="out_PatientFolder" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_PatientID">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_PatientID" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_LogDir" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_isDemographicsNeeded">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="IsDemographicNeeded" />
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="699.2,1204.8" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="692.8,1134.4" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch DisplayName="Try Catch- System exception" sap:VirtualizedContainerService.HintSize="630.4,939.2" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Deleting folder sequence" sap:VirtualizedContainerService.HintSize="593.6,698.4" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Directory.GetFiles(out_PatientFolder).Count=0]" DisplayName="If- file count is 0" sap:VirtualizedContainerService.HintSize="531.2,412" sap2010:WorkflowViewState.IdRef="If_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="496,213.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:DeleteFolderX DisplayName="Delete patient  Folder" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="DeleteFolderX_1" Path="[out_PatientFolder]" Recursive="True" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Kill chrome Workflow File" sap:VirtualizedContainerService.HintSize="531.2,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Cleaer cache &amp; Kill chrome\Kill Chrome.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="596.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:LogMessage DisplayName="Log Message - delete folder" sap:VirtualizedContainerService.HintSize="333.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;Deletion of patient folder\kill chrome failed&quot;]" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <Rethrow DisplayName="Rethrow- SE " sap:VirtualizedContainerService.HintSize="630.4,32" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
              </Sequence>
            </ActivityAction>
          </Catch>
          <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="699.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="692.8,931.2" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch DisplayName="Try Catch - Business exception" sap:VirtualizedContainerService.HintSize="630.4,776" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Deleting folder sequence" sap:VirtualizedContainerService.HintSize="593.6,535.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Directory.GetFiles(out_PatientFolder).Count=0]" DisplayName="If- files count is 0" sap:VirtualizedContainerService.HintSize="531.2,412" sap2010:WorkflowViewState.IdRef="If_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="496,213.6" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:DeleteFolderX DisplayName="Delete patient ID Folder" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="DeleteFolderX_2" Path="[out_PatientFolder]" Recursive="True" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="596.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:LogMessage DisplayName="Log Message- Delete folder" sap:VirtualizedContainerService.HintSize="333.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;Deletion of patient folder failed&quot;]" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <Rethrow DisplayName="Rethrow - SE" sap:VirtualizedContainerService.HintSize="592,32" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
  </Sequence>
</Activity>