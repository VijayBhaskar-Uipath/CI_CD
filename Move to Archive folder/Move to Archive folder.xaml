<Activity mc:Ignorable="sap sap2010" x:Class="Move_to_Archive_folder" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SetFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_RQfolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_EHRName" Type="InArgument(x:String)" />
    <x:Property Name="in_LogDir" Type="InArgument(x:String)" />
    <x:Property Name="in_bolToolkituploadSuccess" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_StudyName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1019.2,3524</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Move_to_Archive_folder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="35">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1029.6,3459.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[in_bolToolkituploadSuccess]" sap:VirtualizedContainerService.HintSize="988,3366.4" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="241.6,161.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Move_to_Archive_folder_success" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="bol_todaysDateFolderExists" />
              <Variable x:TypeArguments="x:Boolean" Name="bol_EhrFolderExists" />
              <Variable x:TypeArguments="x:Boolean" Name="bol_SuccessFolderexists" />
              <Variable x:TypeArguments="x:Boolean" Name="bol_StudyNameExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bol_SuccessFolderexists]" sap:VirtualizedContainerService.HintSize="619.2,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_4" Path="[in_RQfolderPath+&quot;\Success&quot;]" />
            <If Condition="[bol_SuccessFolderexists]" sap:VirtualizedContainerService.HintSize="619.2,332.8" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[in_RQfolderPath+&quot;\Success&quot;]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bol_todaysDateFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_5" Path="[in_RQfolderPath+&quot;\Success\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)]" />
            <If Condition="[bol_todaysDateFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,332.8" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[in_RQfolderPath+&quot;\Success\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bol_EhrFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_6" Path="[in_RQfolderPath+&quot;\Success\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName]" />
            <If Condition="[bol_EhrFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,332.8" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[in_RQfolderPath+&quot;\Success\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bol_StudyNameExists]" sap:VirtualizedContainerService.HintSize="619.2,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_7" Path="[in_RQfolderPath+&quot;\Success\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName+&quot;\&quot;+in_StudyName]" />
            <If Condition="[bol_StudyNameExists]" sap:VirtualizedContainerService.HintSize="619.2,332.8" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_7" Path="[in_RQfolderPath+&quot;\Success\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName+&quot;\&quot;+in_StudyName]" />
                </Sequence>
              </If.Else>
            </If>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="619.2,770.4" sap2010:WorkflowViewState.IdRef="TryCatch_2">
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="475.2,539.2" sap2010:WorkflowViewState.IdRef="Sequence_20">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MoveFolderX DisplayName="Move Folder" From="[in_SetFolderPath]" sap:VirtualizedContainerService.HintSize="433.6,160" sap2010:WorkflowViewState.IdRef="MoveFolderX_2" Overwrite="True" To="[in_RQfolderPath+&quot;\Success\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName+&quot;\&quot;+in_StudyName]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[in_SetFolderPath+&quot;  moved to Archive folder after succesful upload&quot;]" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Msg" xml:space="preserve">[in_SetFolderPath+"  moved to Archive folder after succesful upload"]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="478.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="416.8,432" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="375.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[in_SetFolderPath+&quot; failed move to Archive folder after succesful upload&quot;]" />
                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,206.4" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Msg">[in_SetFolderPath+" failed move to Archive folder after succesful upload"]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="702.4,3207.2" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Move_to_Archive_folder_failed" sap:VirtualizedContainerService.HintSize="660.8,3114.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="bol_failedFolderExists" />
              <Variable x:TypeArguments="x:Boolean" Name="bol_EhrFolderExists" />
              <Variable x:TypeArguments="x:Boolean" Name="bol_todaysDateFolderExists" />
              <Variable x:TypeArguments="x:Boolean" Name="bol_StudynameExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bol_failedFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_1" Path="[in_RQfolderPath+&quot;\Failed&quot;]" />
            <If Condition="[bol_failedFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,332.8" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[in_RQfolderPath+&quot;\Failed&quot;]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bol_todaysDateFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_2" Path="[in_RQfolderPath+&quot;\Failed\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)]" />
            <If Condition="[bol_todaysDateFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,332.8" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[in_RQfolderPath+&quot;\Failed\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bol_EhrFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_3" Path="[in_RQfolderPath+&quot;\Failed\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName]" />
            <If Condition="[bol_EhrFolderExists]" sap:VirtualizedContainerService.HintSize="619.2,332.8" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[in_RQfolderPath+&quot;\Failed\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:FolderExistsX DisplayName="Folder Exists" Exists="[bol_StudynameExists]" sap:VirtualizedContainerService.HintSize="619.2,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_8" Path="[in_RQfolderPath+&quot;\Failed\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName+&quot;\&quot;+in_StudyName]" />
            <If Condition="[bol_StudynameExists]" sap:VirtualizedContainerService.HintSize="619.2,332.8" sap2010:WorkflowViewState.IdRef="If_9">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="200,84.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,173.6" sap2010:WorkflowViewState.IdRef="Sequence_27">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_8" Path="[in_RQfolderPath+&quot;\Failed\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName+&quot;\&quot;+in_StudyName]" />
                </Sequence>
              </If.Else>
            </If>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="619.2,832.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="475.2,601.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MoveFolderX DisplayName="Move Folder" From="[in_SetFolderPath]" sap:VirtualizedContainerService.HintSize="433.6,160" sap2010:WorkflowViewState.IdRef="MoveFolderX_1" Overwrite="True" To="[in_RQfolderPath+&quot;\Failed\&quot;+DateTime.Now.ToString(&quot;yyyyMMdd&quot;)+&quot;\&quot;+in_EhrName+&quot;\&quot;+in_StudyName]" />
                  <Delay Duration="00:00:15" sap:VirtualizedContainerService.HintSize="433.6,22.4" sap2010:WorkflowViewState.IdRef="Delay_1" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[in_SetFolderPath+&quot;  moved to Archive folder after failed upload&quot;]" />
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Msg" xml:space="preserve">[in_SetFolderPath+"  moved to Archive folder after failed upload"]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="478.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="416.8,432" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="375.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[in_SetFolderPath+&quot; failed move to Archive folder after failed upload&quot;]" />
                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,206.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\Logs_Generation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_LogDir">[in_LogDir]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Msg">[in_SetFolderPath+" failed move to Archive folder after failed upload"]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>